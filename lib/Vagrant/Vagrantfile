# vi: set ft=ruby:fdl=0:sts=2:sw=2:ts=2
#-----------------------------------------------------------------------------------------------
# The most common configuration options are documented and commented below.
# For a complete reference, please see the online documentation at
#  https://docs.vagrantup.com.
#
# Every Vagrant development environment requires a box. You can search for boxes at
#  https://atlas.hashicorp.com/search.
#
# Repository List
#  @epel     http://ftp.riken.jp/Linux/fedora/epel
#  @remi     http://rpms.famillecollet.com/RPM-GPG-KEY-remi
#  @rpmforge http://apt.sw.be/RPM-GPG-KEY.dag.txt
#  @mysql    http://repo.mysql.com/RPM-GPG-KEY-mysql
#
# Ruby on Rails recommend version
#  http://rubyonrails.org/download/
#-----------------------------------------------------------------------------------------------
MODE = {
  'APACHE' => true,
  'MYSQL'  => true,
  'PHP'    => true,
  'RUBY'   => false,
  'DEV'    => false}
VAGRANTFILE_API_VERSION = 2
VAGRANTFILE_LOG         = "/var/log/vagrantfile.log"
ACCOUNT                 = "vagrant"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  index = 0

  config.vm.box = "relativkreativ/centos-7-minimal"
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end
  config.vm.network  "forwarded_port", guest: 80,   host: 2223
  config.vm.network  "forwarded_port", guest: 3000, host: 3000
  config.vm.provider "virtualbox" do |vb|
    vb.gui    = false
    vb.memory = "4096"
  end

  #Before {{{
  config.vm.provision "shell", inline: <<-SHELL
    echo "Environment setting ..."
      sudo touch #{VAGRANTFILE_LOG}                          && \
      sudo chown -R #{ACCOUNT}:#{ACCOUNT} #{VAGRANTFILE_LOG} && \
      echo "\tLOG:\t#{VAGRANTFILE_LOG}"                      && \
      export HOME=/home/#{ACCOUNT}                           && \
      echo "\tHOME:\t${HOME}"                                && \
    echo "SELinux disabled ..."
      setenforce 0 && \
      sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
  SHELL
  config.vm.provision "shell", path:'modules/yum.sh'
  #}}}

  if MODE['APACHE'] then #{{{
    config.vm.provision "shell", path:'modules/httpd.sh'
  end #}}}

  if MODE['MYSQL'] then #{{{
    config.vm.provision "shell", path:'modules/mysql.sh'
  end #}}}

  if MODE['PHP'] then #{{{
    config.vm.provision "shell", path:'modules/php.sh'
  end #}}}

  if MODE['RUBY'] then #{{{
    config.vm.provision "shell", path:'modules/rubyonrails.sh'
  end #}}}

  if MODE['DEV'] then #{{{
    config.vm.provision "shell", inline: <<-SHELL
      echo "q install ..."
        rpm -ivh https://github.com/harelba/packages-for-q/raw/master/rpms/q-text-as-data-1.5.0-1.noarch.rpm >> #{VAGRANTFILE_LOG}
    SHELL
    config.vm.provision "shell", path:'modules/luajit.sh'
    config.vm.provision "shell", path:'modules/vim.sh'
    config.vm.provision "shell", path:'modules/dotfiles.sh'
  end #}}}

  #After {{{
  config.vm.provision "shell", inline: <<-SHELL
    echo "chown ..."
      chown -R #{ACCOUNT}:#{ACCOUNT} /srv       && \
      chown -R #{ACCOUNT}:#{ACCOUNT} /usr/local && \
      chown -R #{ACCOUNT}:#{ACCOUNT} /var/log   && \
      chown -R #{ACCOUNT}:#{ACCOUNT} $HOME
    echo "Infomation..." && \
      echo "\tStart Up shell"                                                && \
      echo '$ $HOME/work/dotfiles/src/vagrantStartUp.sh'                     && \
      echo ""                                                                && \
      echo '[if-ERROR]'                                                      && \
      echo "Failed to mount folders in Linux guest. This is usually beacuse" && \
      echo 'the "vboxsf" file system is not available. Please verify that'   && \
      echo ''                                                                && \
      echo '$ vagrant ssh'                                                   && \
      echo '$ sudo /etc/init.d/vboxadd setup'                                && \
      echo '$ exit'                                                          && \
      echo '$ vagrant halt'                                                  && \
      echo '$ vagrant up'                                                    && \
      echo ''                                                                && \
      echo "\tRuby on Rails"                                                 && \
      echo '$ cd /srv/sample/ && rails server -b 0.0.0.0'
  SHELL
  #}}}
end

